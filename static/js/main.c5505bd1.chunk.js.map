{"version":3,"sources":["components/NavigationLink/NavigationLink.tsx","components/Navigation/Navigation.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/TablePerson/TablePerson.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/WrongUrlPage.tsx","App.tsx","index.tsx"],"names":["NavigationLink","_ref","to","text","_jsx","NavLink","className","_ref2","isActive","classNames","children","Navigation","role","_jsxs","HomePage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","Link","concat","slug","sex","name","TablePerson","React","memo","selectedPersonSlug","mother","father","isSelected","personMotherName","motherName","personFatherName","fatherName","personMather","personFather","born","died","PeopleTable","people","isError","length","map","personMother","find","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","setIsError","_useState5","_useState6","isLoading","setIsLoading","_useParams$peopleSlug","useParams","peopleSlug","loadPeoples","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peoplesFromServer","wrap","_context","prev","next","sent","t0","stop","useEffect","showLoader","_Fragment","WrongUrlPage","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.c5505bd1.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const NavigationLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { NavigationLink } from '../NavigationLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLink to=\"/\" text=\"Home\" />\n        <NavigationLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n  selectedPersonSlug: string,\n  mother: Person | null,\n  father: Person | null,\n};\n\nexport const TablePerson: React.FC<Props> = React.memo(\n  ({\n    person,\n    selectedPersonSlug,\n    mother,\n    father,\n  }) => {\n    const isSelected = person.slug === selectedPersonSlug;\n    const personMotherName = person.motherName || '-';\n    const personFatherName = person.fatherName || '-';\n\n    const personMather\n      = mother\n        ? <PersonLink person={mother} />\n        : personMotherName;\n\n    const personFather\n      = father\n        ? <PersonLink person={father} />\n        : personFatherName;\n\n    return (\n      <tr\n        data-cy=\"person\"\n        className={classNames({ 'has-background-warning': isSelected })}\n      >\n        <td>\n          <PersonLink person={person} />\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>{personMather}</td>\n        <td>{personFather}</td>\n      </tr>\n    );\n  },\n);\n","import React from 'react';\n\nimport { Person } from '../../types';\nimport { TablePerson } from '../TablePerson';\n\ntype Props = {\n  people: Person[],\n  isError: boolean,\n  selectedPersonSlug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(\n  ({\n    people,\n    isError,\n    selectedPersonSlug,\n  }) => {\n    if (isError) {\n      return (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      );\n    }\n\n    if (!people.length) {\n      return (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      );\n    }\n\n    return (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => {\n            const personMother\n            = people.find(mother => mother.name === person.motherName) || null;\n\n            const personFather\n            = people.find(father => father.name === person.fatherName) || null;\n\n            return (\n              <TablePerson\n                key={person.slug}\n                person={person}\n                selectedPersonSlug={selectedPersonSlug}\n                mother={personMother}\n                father={personFather}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const { peopleSlug = '' } = useParams();\n\n  const loadPeoples = useCallback(async () => {\n    try {\n      const peoplesFromServer = await getPeople();\n\n      setPeople(peoplesFromServer);\n      setIsLoading(false);\n    } catch (error) {\n      setIsError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeoples();\n  }, []);\n\n  const showLoader = isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {showLoader\n            ? <Loader />\n            : (\n              <PeopleTable\n                people={people}\n                isError={isError}\n                selectedPersonSlug={peopleSlug}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const WrongUrlPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { WrongUrlPage } from './pages/WrongUrlPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"*\"\n            element={<WrongUrlPage />}\n          />\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"people\"\n            element={<PeoplePage />}\n          >\n            <Route\n              path=\":peopleSlug\"\n            />\n            <Route\n              index\n            />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}